import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.preprocessing import StandardScaler, OneHotEncoder
from sklearn.impute import SimpleImputer
from sklearn.compose import ColumnTransformer
from sklearn.pipeline import Pipeline


# Load the dataset
url = 'https://raw.githubusercontent.com/arthurlnlt/machinelearning/refs/heads/main/heart.csv'
data = pd.read_csv(url)

# Display the first few rows of the dataset
print(data.head())

# Display information about the dataset
print(data.info())

# Display descriptive statistics
print(data.describe())

# Visualize data distributions
sns.pairplot(data, hue='target')
plt.show()

# Identify missing values
print(data.isnull().sum())

# Visualize outliers
sns.boxplot(data=data)
plt.xticks(rotation=90)
plt.show()

# Calculate summary statistics
print(data.describe())


# Separate features and target
X = data.drop('target', axis=1)
y = data['target']

# Identify numeric and categorical features
numeric_features = X.select_dtypes(include=['int64', 'float64']).columns
categorical_features = X.select_dtypes(include=['object']).columns

# Create pipelines for preprocessing
numeric_transformer = Pipeline(steps=[
    ('imputer', SimpleImputer(strategy='median')),
    ('scaler', StandardScaler())])

categorical_transformer = Pipeline(steps=[
    ('imputer', SimpleImputer(strategy='constant', fill_value='missing')),
    ('onehot', OneHotEncoder(handle_unknown='ignore'))])

preprocessor = ColumnTransformer(
    transformers=[
        ('num', numeric_transformer, numeric_features),
        ('cat', categorical_transformer, categorical_features)])

# Apply preprocessing
X_preprocessed = preprocessor.fit_transform(X)

# Display preprocessed data
print(X_preprocessed)
